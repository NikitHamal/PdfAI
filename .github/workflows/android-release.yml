name: Android Release Build

on:
  push:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
      ANDROID_HOME: /opt/android-sdk
      ANDROID_SDK_ROOT: /opt/android-sdk
      GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download and set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: latest

      - name: Download Gradle 8.9
        run: |
          wget https://services.gradle.org/distributions/gradle-8.9-bin.zip -O gradle-8.9-bin.zip
          unzip -q gradle-8.9-bin.zip -d gradle
          rm gradle-8.9-bin.zip

      - name: Generate local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties

      - name: Generate keystore for signing
        run: |
          keytool -genkeypair -v -keystore my-release-key.keystore -alias pdfai -keyalg RSA -keysize 2048 -validity 10000 -storepass password -keypass password -dname "CN=pdfai, OU=pdfai, O=pdfai, L=pdfai, S=pdfai, C=US"

      - name: Add signing config to app/build.gradle
        run: |
          if ! grep -q 'signingConfigs' app/build.gradle; then
            sed -i "/buildTypes {/,/}/ s/buildTypes {/signingConfigs { release { storeFile file('my-release-key.keystore')\n            storePassword 'password'\n            keyAlias 'pdfai'\n            keyPassword 'password'\n        } }\n    buildTypes {/" app/build.gradle
            sed -i "/release {/a \\            signingConfig signingConfigs.release" app/build.gradle
          fi

      - name: Build release APK
        run: |
          ./gradle/gradle-8.9/bin/gradle assembleRelease --no-daemon --stacktrace || (cat app/build/outputs/logs/; exit 1)

      - name: Find and sign APK
        run: |
          APK_PATH=$(find app/build/outputs/apk/release -name '*-unsigned.apk' | head -n 1)
          if [ -z "$APK_PATH" ]; then
            echo "No unsigned APK found!" && exit 1
          fi
          cp "$APK_PATH" app-release-unsigned.apk
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore my-release-key.keystore -storepass password -keypass password app-release-unsigned.apk pdfai
          ZIPALIGN=$(find $ANDROID_HOME -name zipalign | head -n 1)
          if [ -z "$ZIPALIGN" ]; then
            ZIPALIGN=zipalign
          fi
          $ZIPALIGN -v -p 4 app-release-unsigned.apk app-release-signed.apk

      - name: Rename APK with commit hash
        run: |
          HASH=${{ github.sha }}
          mv app-release-signed.apk app-release-${HASH}.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ github.sha }}.apk
          path: app-release-${{ github.sha }}.apk