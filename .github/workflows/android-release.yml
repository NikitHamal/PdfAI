name: Android Release Build

on:
  push:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Make gradlew executable (if present)
        run: |
          if [ -f "./gradlew" ]; then
            chmod +x ./gradlew
          fi

      - name: Generate local.properties
        run: echo "sdk.dir=$ANDROID_HOME" > local.properties

      - name: Generate keystore for signing
        run: |
          if [ ! -f my-release-key.keystore ]; then
            keytool -genkeypair -v -keystore my-release-key.keystore -alias pdfai -keyalg RSA -keysize 2048 -validity 10000 -storepass password -keypass password -dname "CN=pdfai, OU=pdfai, O=pdfai, L=pdfai, S=pdfai, C=US"
          fi

      - name: Add signing config to app/build.gradle
        run: |
          if ! grep -q 'signingConfigs' app/build.gradle; then
            sed -i "/buildTypes {/i \    signingConfigs { release { storeFile file('my-release-key.keystore')\\n            storePassword 'password'\\n            keyAlias 'pdfai'\\n            keyPassword 'password'\\n        } }" app/build.gradle
            sed -i "/release {/a \            signingConfig signingConfigs.release" app/build.gradle
          fi

      - name: Build Release APK
        run: |
          if [ -f "./gradlew" ]; then
            ./gradlew assembleRelease --no-daemon --stacktrace
          else
            ./gradle/gradle-8.9/bin/gradle assembleRelease --no-daemon --stacktrace
          fi

      - name: Set short SHA
        id: set_sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Find and sign APK
        run: |
          APK_PATH=$(find app/build/outputs/apk/release -name '*-unsigned.apk' | head -n 1)
          if [ -z "$APK_PATH" ]; then
            echo "No unsigned APK found!" && exit 1
          fi
          cp "$APK_PATH" app-release-unsigned.apk
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore my-release-key.keystore -storepass password -keypass password app-release-unsigned.apk pdfai
          ZIPALIGN=$(find $ANDROID_HOME -name zipalign | head -n 1)
          if [ -z "$ZIPALIGN" ]; then
            ZIPALIGN=zipalign
          fi
          $ZIPALIGN -v -p 4 app-release-unsigned.apk app-release-signed.apk

      - name: Rename APK with commit hash
        run: |
          mv app-release-signed.apk app-release-${{ steps.set_sha.outputs.short_sha }}.apk

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ steps.set_sha.outputs.short_sha }}
          path: app-release-${{ steps.set_sha.outputs.short_sha }}.apk